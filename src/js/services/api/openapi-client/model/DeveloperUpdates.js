/**
 * {{ title }}
 * Server version: {{ server_version }} built on {{ build_date }} @ [{{ commit }}](https://github.com/athenianco/athenian-api/commit/{{ commit }})
 *
 * The version of the OpenAPI document: 1.0.43
 * Contact: admin@athenian.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeveloperUpdates model module.
 * @module model/DeveloperUpdates
 * @version 1.0.43
 */
class DeveloperUpdates {
    /**
     * Constructs a new <code>DeveloperUpdates</code>.
     * Various developer contributions statistics over the specified time period. Note: any of these properties may be missing if there was no such activity.
     * @alias module:model/DeveloperUpdates
     */
    constructor() { 
        
        DeveloperUpdates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeveloperUpdates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeveloperUpdates} obj Optional instance to populate.
     * @return {module:model/DeveloperUpdates} The populated <code>DeveloperUpdates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeveloperUpdates();

            if (data.hasOwnProperty('prs')) {
                obj['prs'] = ApiClient.convertToType(data['prs'], 'Number');
            }
            if (data.hasOwnProperty('reviewer')) {
                obj['reviewer'] = ApiClient.convertToType(data['reviewer'], 'Number');
            }
            if (data.hasOwnProperty('commit_author')) {
                obj['commit_author'] = ApiClient.convertToType(data['commit_author'], 'Number');
            }
            if (data.hasOwnProperty('commit_committer')) {
                obj['commit_committer'] = ApiClient.convertToType(data['commit_committer'], 'Number');
            }
            if (data.hasOwnProperty('commenter')) {
                obj['commenter'] = ApiClient.convertToType(data['commenter'], 'Number');
            }
            if (data.hasOwnProperty('releaser')) {
                obj['releaser'] = ApiClient.convertToType(data['releaser'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * How many PRs authored by this developer updated. Note: this is not the same as the number of PRs this developer opened. Note: the update origin is not necessarily this developer.
 * @member {Number} prs
 */
DeveloperUpdates.prototype['prs'] = undefined;

/**
 * How many reviews this developer submitted. Note: this is not the same as the number of unique PRs reviewed.
 * @member {Number} reviewer
 */
DeveloperUpdates.prototype['reviewer'] = undefined;

/**
 * How many commits this developer authored.
 * @member {Number} commit_author
 */
DeveloperUpdates.prototype['commit_author'] = undefined;

/**
 * How many commits this developer pushed.
 * @member {Number} commit_committer
 */
DeveloperUpdates.prototype['commit_committer'] = undefined;

/**
 * How many regular PR comments this developer left. Note: issues are not taken into account, only the PRs.
 * @member {Number} commenter
 */
DeveloperUpdates.prototype['commenter'] = undefined;

/**
 * How many releases this developer created.
 * @member {Number} releaser
 */
DeveloperUpdates.prototype['releaser'] = undefined;






export default DeveloperUpdates;

