/**
 * {{ title }}
 * Server version: {{ server_version }} built on {{ build_date }} @ [{{ commit }}](https://github.com/athenianco/athenian-api/commit/{{ commit }})
 *
 * The version of the OpenAPI document: 1.0.32
 * Contact: admin@athenian.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CalculatedPullRequestMetricValues model module.
 * @module model/CalculatedPullRequestMetricValues
 * @version 1.0.32
 */
class CalculatedPullRequestMetricValues {
    /**
     * Constructs a new <code>CalculatedPullRequestMetricValues</code>.
     * @alias module:model/CalculatedPullRequestMetricValues
     * @param _date {Date} Where you should relate the metric value to on the time axis.
     * @param values {Array.<Number>} Calculated metric values in the same order as `metrics`.
     */
    constructor(_date, values) { 
        
        CalculatedPullRequestMetricValues.initialize(this, _date, values);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _date, values) { 
        obj['date'] = _date;
        obj['values'] = values;
    }

    /**
     * Constructs a <code>CalculatedPullRequestMetricValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CalculatedPullRequestMetricValues} obj Optional instance to populate.
     * @return {module:model/CalculatedPullRequestMetricValues} The populated <code>CalculatedPullRequestMetricValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CalculatedPullRequestMetricValues();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['Number']);
            }
            if (data.hasOwnProperty('confidence_mins')) {
                obj['confidence_mins'] = ApiClient.convertToType(data['confidence_mins'], ['Number']);
            }
            if (data.hasOwnProperty('confidence_maxs')) {
                obj['confidence_maxs'] = ApiClient.convertToType(data['confidence_maxs'], ['Number']);
            }
            if (data.hasOwnProperty('confidence_scores')) {
                obj['confidence_scores'] = ApiClient.convertToType(data['confidence_scores'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * Where you should relate the metric value to on the time axis.
 * @member {Date} date
 */
CalculatedPullRequestMetricValues.prototype['date'] = undefined;

/**
 * Calculated metric values in the same order as `metrics`.
 * @member {Array.<Number>} values
 */
CalculatedPullRequestMetricValues.prototype['values'] = undefined;

/**
 * Confidence interval @ p=0.8, minimum. The same order as `metrics`. It is optional because there can be exact metrics like \"count open PRs per month\".
 * @member {Array.<Number>} confidence_mins
 */
CalculatedPullRequestMetricValues.prototype['confidence_mins'] = undefined;

/**
 * Confidence interval @ p=0.8, maximum. The same order as `metrics`. It is optional because there can be exact metrics like \"count open PRs per month\".
 * @member {Array.<Number>} confidence_maxs
 */
CalculatedPullRequestMetricValues.prototype['confidence_maxs'] = undefined;

/**
 * Confidence score from 0 (no idea) to 100 (very confident). The same order as `metrics`.
 * @member {Array.<Number>} confidence_scores
 */
CalculatedPullRequestMetricValues.prototype['confidence_scores'] = undefined;






export default CalculatedPullRequestMetricValues;

