/**
 * {{ title }}
 * Server version: {{ server_version }} built on {{ build_date }} @ [{{ commit }}](https://github.com/athenianco/athenian-api/commit/{{ commit }})
 *
 * The version of the OpenAPI document: 1.0.5
 * Contact: admin@athenian.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FilterCommitsRequestAllOf model module.
 * @module model/FilterCommitsRequestAllOf
 * @version 1.0.5
 */
class FilterCommitsRequestAllOf {
    /**
     * Constructs a new <code>FilterCommitsRequestAllOf</code>.
     * @alias module:model/FilterCommitsRequestAllOf
     * @param property {module:model/FilterCommitsRequestAllOf.PropertyEnum} Main trait of the commits - the core of the filter.
     */
    constructor(property) { 
        
        FilterCommitsRequestAllOf.initialize(this, property);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, property) { 
        obj['property'] = property;
    }

    /**
     * Constructs a <code>FilterCommitsRequestAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterCommitsRequestAllOf} obj Optional instance to populate.
     * @return {module:model/FilterCommitsRequestAllOf} The populated <code>FilterCommitsRequestAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterCommitsRequestAllOf();

            if (data.hasOwnProperty('property')) {
                obj['property'] = ApiClient.convertToType(data['property'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Main trait of the commits - the core of the filter.
 * @member {module:model/FilterCommitsRequestAllOf.PropertyEnum} property
 */
FilterCommitsRequestAllOf.prototype['property'] = undefined;





/**
 * Allowed values for the <code>property</code> property.
 * @enum {String}
 * @readonly
 */
FilterCommitsRequestAllOf['PropertyEnum'] = {

    /**
     * value: "bypassing_prs"
     * @const
     */
    "bypassing_prs": "bypassing_prs"
};



export default FilterCommitsRequestAllOf;

