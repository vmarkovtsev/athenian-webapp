/**
 * {{ title }}
 * Server version: {{ server_version }} built on {{ build_date }} @ {{ commit }}
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@athenian.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CalculatedMetrics from '../model/CalculatedMetrics';
import GenericError from '../model/GenericError';
import InvalidRequestError from '../model/InvalidRequestError';
import MetricsRequest from '../model/MetricsRequest';
import NoSourceDataError from '../model/NoSourceDataError';

/**
* Metrics service.
* @module api/MetricsApi
* @version 1.0.0
*/
export default class MetricsApi {

    /**
    * Constructs a new MetricsApi. 
    * @alias module:api/MetricsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Calculate metrics.
     * @param {module:model/MetricsRequest} body Desired metric definitions.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CalculatedMetrics} and HTTP response
     */
    calcMetricsLineWithHttpInfo(body) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling calcMetricsLine");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CalculatedMetrics;
      return this.apiClient.callApi(
        '/metrics_line', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Calculate metrics.
     * @param {module:model/MetricsRequest} body Desired metric definitions.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/CalculatedMetrics}
     */
    calcMetricsLine(body) {
      return this.calcMetricsLineWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
