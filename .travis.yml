language: minimal

os:
  - linux

cache:
  directories:
    - "$HOME/google-cloud-sdk/"

env:
  global:
    - GOOGLE_DOCKER_IMAGE=gcr.io/athenian-1/web-app
    - VERSION=${TRAVIS_BRANCH}-${TRAVIS_COMMIT:0:7}
    - IMAGE_BRANCH_COMMIT=${GOOGLE_DOCKER_IMAGE}:${VERSION}

stages:
  - name: test-and-build
  - name: branch-image
    if: (branch != master) AND type != pull_request
  - name: deploy
    if: (branch = master OR tag IS present) AND type != pull_request
  - name: sentry
    if: (branch = master OR tag IS present) AND type != pull_request

before_insall:
  - curl -sL https://sentry.io/get-cli/ | bash

jobs:
  fast_finish: true
  include:
    - stage: test-and-build
      name: 'Frontend Tests and Build'
      script:
        - docker build --target app-deps -t webapp-frontend-testing .
        - docker run -e CI=true webapp-frontend-testing make test
        - docker run -e CI=true webapp-frontend-testing make build
    - stage: sentry
      name: 'Prepare Sentry release'
      script:
        - docker build --target app-sentry-releaser -t webapp-frontend-sentry-releaser .
        - docker run -e SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN} -e SENTRY_RELEASE=${VERSION} webapp-frontend-sentry-releaser
    - stage: branch-image
      name: 'Branch Image'
      script:
        - IMAGE=${GOOGLE_DOCKER_IMAGE}:branch-$(echo -n ${TRAVIS_BRANCH} | md5sum | cut -c -32) DOCKER_EXTRA_BUILD_FLAGS="--build-arg release=${VERSION}" make docker-build gcloud-login docker-push
    - stage: deploy
      name: 'Deploy App'
      script:
        - |
          if [ ! -z "$TRAVIS_TAG" ]; then
            IMAGE=${GOOGLE_DOCKER_IMAGE}:${TRAVIS_TAG} DOCKER_EXTRA_BUILD_FLAGS="--build-arg release=${VERSION}" make docker-build gcloud-login docker-push
            exit 0
          fi
        - IMAGE=${IMAGE_BRANCH_COMMIT} DOCKER_EXTRA_BUILD_FLAGS="--build-arg release=${VERSION}" make deploy
        - docker tag ${IMAGE_BRANCH_COMMIT} ${GOOGLE_DOCKER_IMAGE}:latest
        - IMAGE=${GOOGLE_DOCKER_IMAGE}:latest make docker-push
